class UComplexBranchTest
{
	void Test()
	{
		int SomethingBefore = 0;
		SomethingBefore++;

		// This should not be guarded since the other condition could get us in here on the client. Scopes should only be guarded if it *requires* server.
		if(SomethingBefore > 42 && (System::IsServer() || SomethingBefore < 10))
		{
			float NotThis = 0.0f;
			NotThis--;
		}

		// As long as the IsServer is a hard requirement for the clause, it's okay.
		if((SomethingBefore > 42 || SomethingBefore < 10 || SomethingBefore == 13) && System::IsServer())
		{
			int Yes = 0;
			Yes++;
		}

		if((SomethingBefore > 42 || SomethingBefore < 10 || SomethingBefore == 13) && (!System::IsServer() || SomethingBefore == 13))
		{
			int NotThisEither = 0;
			NotThisEither++;
		}
		else
		{
			int NotThisEither = 0;
			NotThisEither++;
		}

		int NotThisEither = 0;
		NotThisEither++;
	}
};
